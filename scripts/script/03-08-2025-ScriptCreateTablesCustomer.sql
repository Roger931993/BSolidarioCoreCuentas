CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'logs') THEN
        CREATE SCHEMA logs;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'customer') THEN
        CREATE SCHEMA customer;
    END IF;
END $EF$;

CREATE TABLE logs.api_log_customer_header (
    api_log_customer_header_id integer GENERATED ALWAYS AS IDENTITY,
    request_method character varying(300),
    request_url character varying(300),
    response_code integer,
    id_tracking uuid NOT NULL,
    created_at timestamp with time zone,
    CONSTRAINT "PK_api_log_customer_header" PRIMARY KEY (api_log_customer_header_id)
);

CREATE TABLE customer.customer (
    customer_id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(300),
    commercial_name character varying(300),
    country character varying(300),
    rfc character varying(300),
    municipality character varying(300),
    colony character varying(300),
    state character varying(300),
    post_code character varying(300),
    tax_regime character varying(300),
    person_type integer,
    number_ext character varying(300),
    number_int character varying(300),
    address character varying(300),
    tax_id character varying(300),
    status integer,
    date_create timestamp with time zone,
    date_update timestamp with time zone,
    CONSTRAINT "PK_customer" PRIMARY KEY (customer_id)
);

CREATE TABLE logs.api_log_customer_detail (
    api_log_customer_detail_id integer GENERATED ALWAYS AS IDENTITY,
    created_at timestamp with time zone,
    api_log_customer_header_id integer,
    status_code integer,
    type_process character varying(300),
    data_message text,
    process_component character varying(300),
    CONSTRAINT "PK_api_log_customer_detail" PRIMARY KEY (api_log_customer_detail_id),
    CONSTRAINT fk_customer_header_detail FOREIGN KEY (api_log_customer_header_id) REFERENCES logs.api_log_customer_header (api_log_customer_header_id)
);

CREATE TABLE customer.customer_account (
    customer_account_id integer GENERATED BY DEFAULT AS IDENTITY,
    customer_id integer,
    number_account character varying(300),
    description character varying(300),
    payment_form character varying(300),
    use_cfdi character varying(300),
    currency character varying(300),
    series character varying(300),
    payment_time integer,
    series_complemento character varying(300),
    status integer,
    date_create timestamp with time zone,
    date_update timestamp with time zone,
    CONSTRAINT "PK_customer_account" PRIMARY KEY (customer_account_id),
    CONSTRAINT "FK_customer_account_customer_customer_id" FOREIGN KEY (customer_id) REFERENCES customer.customer (customer_id) ON DELETE RESTRICT
);

CREATE TABLE customer.customer_contact (
    customer_contact_id integer GENERATED BY DEFAULT AS IDENTITY,
    customer_id integer,
    name character varying(300),
    email character varying(300),
    phone character varying(300),
    status integer,
    date_create timestamp with time zone,
    date_update timestamp with time zone,
    CONSTRAINT "PK_customer_contact" PRIMARY KEY (customer_contact_id),
    CONSTRAINT "FK_customer_contact_customer_customer_id" FOREIGN KEY (customer_id) REFERENCES customer.customer (customer_id) ON DELETE RESTRICT
);

CREATE TABLE customer.user_customer_account (
    user_customer_account_id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer,
    customer_id integer,
    customer_account_id integer,
    status integer,
    date_create timestamp with time zone,
    date_update timestamp with time zone,
    CONSTRAINT "PK_user_customer_account" PRIMARY KEY (user_customer_account_id),
    CONSTRAINT "FK_user_customer_account_customer_account_customer_account_id" FOREIGN KEY (customer_account_id) REFERENCES customer.customer_account (customer_account_id) ON DELETE RESTRICT,
    CONSTRAINT "FK_user_customer_account_customer_customer_id" FOREIGN KEY (customer_id) REFERENCES customer.customer (customer_id) ON DELETE RESTRICT
);

CREATE INDEX "IX_api_log_customer_detail_api_log_customer_header_id" ON logs.api_log_customer_detail (api_log_customer_header_id);

CREATE INDEX "IX_customer_account_customer_id" ON customer.customer_account (customer_id);

CREATE INDEX "IX_customer_contact_customer_id" ON customer.customer_contact (customer_id);

CREATE INDEX "IX_user_customer_account_customer_account_id" ON customer.user_customer_account (customer_account_id);

CREATE INDEX "IX_user_customer_account_customer_id" ON customer.user_customer_account (customer_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250804052812_Migration-Init', '8.0.6');

COMMIT;

