// <auto-generated />
using System;
using Core.Cuentas.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Core.Cuentas.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251026002441_Migration-Init")]
    partial class MigrationInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.api_log_cuenta_detail", b =>
                {
                    b.Property<int>("api_log_cuenta_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_cuenta_detail_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_cuenta_detail_id"));

                    b.Property<int?>("api_log_cuenta_header_id")
                        .HasColumnType("int")
                        .HasColumnName("api_log_cuenta_header_id");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("data_message")
                        .HasMaxLength(300)
                        .HasColumnType("text");

                    b.Property<string>("process_component")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("status_code")
                        .HasColumnType("int");

                    b.Property<string>("type_process")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("api_log_cuenta_detail_id");

                    b.HasIndex("api_log_cuenta_header_id");

                    b.ToTable("api_log_cuenta_detail", "dbo");
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.api_log_cuenta_header", b =>
                {
                    b.Property<int>("api_log_cuenta_header_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_cuenta_header_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_cuenta_header_id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id_tracking")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("request_method")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("request_url")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("response_code")
                        .HasColumnType("int");

                    b.HasKey("api_log_cuenta_header_id");

                    b.ToTable("api_log_cuenta_header", "dbo");
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.cuenta", b =>
                {
                    b.Property<int>("cuenta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cuenta_id"));

                    b.Property<int?>("agencia_id")
                        .HasColumnType("int");

                    b.Property<int?>("cliente_id")
                        .HasColumnType("int");

                    b.Property<int?>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_apertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_cierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_ultima_transaccion")
                        .HasColumnType("datetime2");

                    b.Property<string>("moneda")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("numero_cuenta")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("producto_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("saldo_actual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("saldo_disponible")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tasa_interes")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo_cuenta")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("usuario_creacion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("cuenta_id");

                    b.ToTable("cuenta", (string)null);
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.movimiento", b =>
                {
                    b.Property<int>("movimiento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movimiento_id"));

                    b.Property<int?>("cuenta_id")
                        .HasColumnType("int");

                    b.Property<int?>("estado")
                        .HasColumnType("int");

                    b.Property<string>("estado_movimiento")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("motivo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("naturaleza")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("referencia")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("saldo_resultante")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo_movimiento")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("movimiento_id");

                    b.HasIndex("cuenta_id");

                    b.ToTable("movimiento", (string)null);
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.secuencial", b =>
                {
                    b.Property<int>("secuencial_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("secuencial_id"));

                    b.Property<string>("descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("valor")
                        .HasColumnType("int");

                    b.HasKey("secuencial_id");

                    b.ToTable("secuencial", (string)null);
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.api_log_cuenta_detail", b =>
                {
                    b.HasOne("Core.Cuentas.Domain.Entities.api_log_cuenta_header", "api_log_cuenta_header")
                        .WithMany("api_log_cuenta_detail")
                        .HasForeignKey("api_log_cuenta_header_id")
                        .HasConstraintName("fk_cuenta_header_detail");

                    b.Navigation("api_log_cuenta_header");
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.movimiento", b =>
                {
                    b.HasOne("Core.Cuentas.Domain.Entities.cuenta", "cuenta")
                        .WithMany("movimientos")
                        .HasForeignKey("cuenta_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("cuenta");
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.api_log_cuenta_header", b =>
                {
                    b.Navigation("api_log_cuenta_detail");
                });

            modelBuilder.Entity("Core.Cuentas.Domain.Entities.cuenta", b =>
                {
                    b.Navigation("movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
